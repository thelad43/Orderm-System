@model CustomersListingViewModel

@{
    ViewData["Title"] = "All customers";
    var number = 1;
    var sort = string.Empty;
}

<h2>@ViewData["Title"]</h2>
<br />

@if (Model.Customers.Any())
{
    <div class="btn-group">
        <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Sort by
        </button>
        <div class="dropdown-menu">
            <a asp-area="" asp-controller="Customers" asp-action="Index" asp-route-sort="FirstName" class="dropdown-item">First Name</a>
            <a asp-area="" asp-controller="Customers" asp-action="Index" asp-route-sort="LastName" class="dropdown-item">Last Name</a>
            <a asp-area="" asp-controller="Customers" asp-action="Index" asp-route-sort="Gender" class="dropdown-item">Gender</a>
            <a asp-area="" asp-controller="Customers" asp-action="Index" asp-route-sort="PhoneNumber" class="dropdown-item">Phone Number</a>
            <a asp-area="" asp-controller="Customers" asp-action="Index" asp-route-sort="CreatedOn" class="dropdown-item">Created On</a>
            <a asp-area="" asp-controller="Customers" asp-action="Index" asp-route-sort="Status" class="dropdown-item">Status</a>
        </div>
    </div>

    <br />
    <br />

    <table class="table table-hover">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">First Name</th>
                <th scope="col">Last Name</th>
                <th scope="col">Gender</th>
                <th scope="col">Phone Number</th>
                <th scope="col">Created On</th>
                <th scope="col">Status</th>
                <th scope="col">Activate/Deactivate</th>
                <th scope="col">Delete</th>
                <th scope="col">Orders</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in Model.Customers)
            {
                var status = customer.Status;

                var btnStatusClass = string.Empty;
                var btnText = string.Empty;

                if (status == Status.Active)
                {
                    btnStatusClass = "btn btn-secondary";
                    btnText = "Deactivate";
                }
                else
                {
                    btnStatusClass = "btn btn-primary";
                    btnText = "Activate";
                }

                <tr>
                    <th scope="row">@(number++ + (Model.CurrentPage - 1) * WebConstants.CustomersPerPage)</th>
                    <td>@customer.FirstName</td>
                    <td>@customer.LastName</td>
                    <td>@(customer.IsMale ? "Male" : "Female")</td>
                    <td>@customer.PhoneNumber</td>
                    <td>@customer.CreatedOn.ToShortDateString()</td>
                    <td>@status</td>
                    <td>
                        <form asp-area="" asp-controller="Customers" asp-action="@btnText" asp-route-id="@customer.Id" method="post"><button class="@btnStatusClass" type="submit">@btnText</button></form>
                    </td>
                    <td>
                        <form asp-area="" asp-controller="Customers" asp-action="Delete" asp-route-id="@customer.Id" method="post"><button class="btn btn-danger" type="submit">Delete</button></form>
                    </td>
                    <td>
                        <a asp-area="" asp-controller="Orders" asp-action="Index" asp-route-customerId="@customer.Id" class="btn btn-info">Orders</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<nav>
    <ul class="pagination justify-content-center">
        @if (Model.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" asp-area="" asp-controller="Customers" asp-action="Index" asp-route-id="@Model.PreviousPage" asp-route-sort="@ViewData[WebConstants.ViewDataSortKey]" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }
        @{
            const int MorePagesToShow = 3;

            var pagesToShow = new List<int>();

            for (var i = 1; i <= MorePagesToShow; i++)
            {
                pagesToShow.Add(i);
            }

            for (var i = Model.CurrentPage - MorePagesToShow; i <= Model.CurrentPage + MorePagesToShow; i++)
            {
                if (i > 0)
                {
                    pagesToShow.Add(i);
                }
            }

            for (var i = Model.PagesCount - MorePagesToShow + 1; i <= Model.PagesCount; i++)
            {
                if (i > 0)
                {
                    pagesToShow.Add(i);
                }
            }

            pagesToShow = pagesToShow
                .Where(x => x <= Model.PagesCount)
                .Distinct()
                .OrderBy(x => x)
                .ToList();
        }

        @for (var i = 0; i < pagesToShow.Count; i++)
        {
            var className = string.Empty;
            var pageNumber = pagesToShow[i];

            if (pageNumber == Model.CurrentPage)
            {
                className = "active";
            }

            if (i > 0 && pageNumber - 1 != pagesToShow[i - 1])
            {
                <li class="page-item @className"><a class="page-link" asp-area="" asp-controller="Customers" asp-action="Index" asp-route-id="@(pagesToShow[i - 1] + 1)" asp-route-sort="@ViewData[WebConstants.ViewDataSortKey]">...</a></li>
            }

            <li class="page-item @className"><a class="page-link" asp-area="" asp-controller="Customers" asp-action="Index" asp-route-id="@pageNumber" asp-route-sort="@ViewData[WebConstants.ViewDataSortKey]">@pageNumber</a></li>
        }

        @if (Model.CurrentPage < Model.PagesCount)
        {
            <li class="page-item">
                <a class="page-link" asp-area="" asp-controller="Customers" asp-action="Index" asp-route-id="@Model.NextPage" asp-route-sort="@ViewData[WebConstants.ViewDataSortKey]" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        }
    </ul>
</nav>